name: Build and Release Cilium

on:
  push:
    branches:
      - main  # Trigger workflow on push to main branch

jobs:
  build-and-release:
    name: Build and Release for ARM and AMD
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch full history to avoid missing commits

    # Step 2: Set up Go with the correct version
    - name: Set Up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23  # Match the version required by your go.mod file

    # Step 3: Install build dependencies
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang llvm make gcc bpfcc-tools

    # Step 4: Validate go.mod format (optional)
    - name: Validate go.mod Format
      run: |
        sed -i 's/go 1.23.0/go 1.23/' go.mod
        cat go.mod  # Confirm the fix

    # Step 5: Clean previous builds
    - name: Clean Build Artifacts
      run: |
        make clean || true
        for i in cilium-dbg daemon cilium-health bugtool operator plugins tools hubble-relay bpf clustermesh-apiserver; do
          make -C $i clean || true
        done

    # Step 6: Build for AMD architecture
    - name: Build for AMD64
      run: |
        make clean
        GOARCH=amd64 make
        tar -czf cilium-linux-amd64.tar.gz cilium
        sha256sum cilium-linux-amd64.tar.gz > cilium-linux-amd64.tar.gz.sha256sum

    # Step 7: Build for ARM architecture
    - name: Build for ARM64
      run: |
        make clean
        GOARCH=arm64 make
        tar -czf cilium-linux-arm64.tar.gz cilium
        sha256sum cilium-linux-arm64.tar.gz > cilium-linux-arm64.tar.gz.sha256sum

    # Step 8: Upload all artifacts
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: cilium-release
        path: |
          cilium-linux-amd64.tar.gz
          cilium-linux-amd64.tar.gz.sha256sum
          cilium-linux-arm64.tar.gz
          cilium-linux-arm64.tar.gz.sha256sum

    # Step 9: Create GitHub release
    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: |
          cilium-linux-amd64.tar.gz
          cilium-linux-amd64.tar.gz.sha256sum
          cilium-linux-arm64.tar.gz
          cilium-linux-arm64.tar.gz.sha256sum
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: v${{ github.run_number }}
        releaseName: Cilium v${{ github.run_number }}
        generateReleaseNotes: true
